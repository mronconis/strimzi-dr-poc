apiVersion: kafka.strimzi.io/v1beta2
kind: Kafka
metadata:
  name: streams-cluster
#  namespace: kafka
  annotations:
    argocd.argoproj.io/sync-wave: "0"
spec:
  kafka:
    resources:
      requests:
        memory: 500Mi
        cpu: 300m
      limits:
        memory: 1Gi
        cpu: "600"
    jvmOptions:
      -Xms: 1024m
      -Xmx: 1024m
    version: 3.9.0
    replicas: 3
    template:
      pod:
        terminationGracePeriodSeconds: 120
        metadata:
          annotations:
            prometheus.io/port: '9404'
            prometheus.io/scheme: http
            prometheus.io/scrape: 'true'
    listeners:
      - name: plain
        port: 9092
        type: internal
        tls: false
        authentication:
          type: scram-sha-512
      - name: mirroring
        port: 9093
        type: cluster-ip
        tls: false
        authentication:
          type: scram-sha-512
    authorization:
      type: simple
      superUsers:
      - admin
      - mirroring-user
    config:
      offsets.topic.replication.factor: 3
      transaction.state.log.replication.factor: 3
      transaction.state.log.min.isr: 2
      default.replication.factor: 3
      min.insync.replicas: 2
      inter.broker.protocol.version: "3.9"
      # Disable auto creation of topic on the server
      auto.create.topics.enable: false
    storage:
      type: jbod
      volumes:
      - id: 0
        type: persistent-claim
        size: 2Gi
        deleteClaim: false
    logging:
      type: inline
      loggers:
        kafka.root.logger.level: INFO
    metricsConfig:
      type: jmxPrometheusExporter
      valueFrom:
        configMapKeyRef:
          name: kafka-metrics
          key: kafka-metrics-config.yml
  zookeeper:
    replicas: 3
    resources:
      requests:
        memory: 150Mi
        cpu: 150m
      limits:
        memory: 500Mi
        cpu: 500m
    jvmOptions:
      -Xms: 512m
      -Xmx: 512m
    storage:
      type: persistent-claim
      size: 1Gi
      deleteClaim: false
    metricsConfig:
      type: jmxPrometheusExporter
      valueFrom:
        configMapKeyRef:
          name: kafka-metrics
          key: zookeeper-metrics-config.yml
  entityOperator:
    topicOperator: {}
    userOperator: {}
